In và Hiển Thị

puts: Dùng để in kết quả ra màn hình và sau đó xuống dòng.
p: In ra giá trị của một đối tượng, bao gồm cả thông tin debug, nhưng không tự động xuống dòng.
print: In ra giá trị mà không tự động xuống dòng.

Đọc Dữ Liệu Đầu Vào
4. gets: Đọc dữ liệu từ bàn phím.
5. gets.chomp: Đọc dữ liệu từ bàn phím và loại bỏ ký tự xuống dòng.

Xử Lý Số
odd?: Kiểm tra xem một số có phải là số lẻ hay không.
even?: Kiểm tra xem một số có phải là số chẵn hay không.
positive?: Kiểm tra xem một số có phải là số dương hay không.
negative?: Kiểm tra xem một số có phải là số âm hay không.
abs: Trả về giá trị tuyệt đối của một số.
next / succ: Tăng giá trị số lên 1.
pred: Giảm giá trị số xuống 1.

Xử Lý Chuỗi và Ký Tự
downcase: Chuyển đổi chuỗi thành chữ thường.
upcase: Chuyển đổi chuỗi thành chữ hoa.
length: Trả về độ dài của chuỗi hoặc mảng.
include?: Kiểm tra xem một chuỗi có chứa một chuỗi con hoặc một phần tử trong mảng hay không.
sub: thay đổi 1 từ còn gsub là thay đổi tất cả
concat hoặc << : nối chuỗi
length : đo độ dài

Làm tròn Số
floor: Làm tròn xuống số nguyên gần nhất.
ceil: Làm tròn lên số nguyên gần nhất.
round: Làm tròn giá trị số thực.

Chuyển Đổi Kiểu Dữ Liệu
to_i: Chuyển đổi đối tượng thành số nguyên.
to_f: Chuyển đổi đối tượng thành số thực (float).
to_s: Chuyển đổi đối tượng thành chuỗi (string).

Xử Lý Số Liên Quan Đến Khoảng Cách và Vị Trí
between?: Kiểm tra xem một giá trị có nằm trong một khoảng cho trước hay không.


Loại Dữ Liệu Null
nil: Đại diện cho không có giá trị hoặc không tồn tại.

Vòng Lặp
8.times {} hoặc 8.times do ... end: Dùng để tạo một vòng lặp lặp lại một đoạn mã 8 lần.
8.upto {} hoặc 8.upto do ... end: Dùng để tạo số vòng lặp đến value
8.downto {} hoặc 8.downto do ... end: Dùng để tạo số vòng lặp đến value
1.step {} hoặc 1.step(100,5) do ... end : dùng để vòng lặp
đại diện kiểu dữ liệu : CLASS
class: Lấy tên của lớp (class) mà một đối tượng thuộc về.


- Array : 
new : tạo mảng mới
at : tìm vị trí của giá trị
fetch(index,ngoại lệ) :  tìm tại giá trị index nếu không có thì in ra ngoại lệ
first,last : lấy giá trị đầu và cuối
take : lấy số phần tử theo giá trị
drop : xóa bỏ số phần tử theo giá trị
length : độ dài
count :số lượng phần tử
empty? : có rỗng hay không ? boolean
include? : có chứa phần tử cần tìm ? boolean
push : thêm phần tử vào cuối mảng
unshift : thêm phần tử vào đầu mảng
insert (index,value) thêm value vào vị trí index
pop : xóa phần tử cuối của mảng
shift : xóa phần tử đầu mảng
delete_at(index) : xóa phần tử tại index
delete(value) : xóa tất cả phần tử có value giống
compact : loại bỏ các phần tử có giá trị nil
uniq : loại bỏ các phần tử trùng lặp
each : thực hiện vòng lặp qua mảng
reverse_each: thực hiện vòng lặp ngược
map : tạo một mảng mới chưa các phép biến đổi
select và reject,drop_while : lấy hoặc bỏ tùy theo giá trị 
delete_ìf và keep_ìf : xóa bỏ hoặc giữ lại tùy theo giá tri
bsearch : trả về phần tử đầu tiên phù hợp với điều kiện
clear : dọn sạch mảng
collect (value): kết hợp giá trị của mảng với value
combinationn (value) : tạo các tổ hợp mảng hoặc danh sách tùy theo value
concat : nối mảng
cycle (value) : lặp theo value hoặc vô hạn
fill : thay đổi các giá trị trong phần tử
rindex : in ra giá trị index của phần tử cuối cùng
sample : lấy ngẫu nhiên các phần tử
shuffle : làm xáo trộn mảng
slice : lấy các phần tử của mảng
sort : sắp xếp phần tử trong mảng
join : nối các phần tử trong mảng
flatten : làm phẳng các phần tử trong mảng
value_at : lấy giá trị tại các index

- Điều kiện
 ìf eleif else end
 case when end
 unless end
 ||= : nếu là nil thì gán giá trị mới :::: value = nil , value ||= 10


